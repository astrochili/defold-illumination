local illumination = require "illumination.illumination"

--
-- Local

local urls = { }

local daycycle = {
  {
    sunlight_direction = vmath.vector3(-179, 20, 0),
    sunlight_color = vmath.vector3(0.1, 0.1, 0.3),
    sunlight_brightness = 0.5,
    ambient_color = vmath.vector3(0.5, 0.5, 1.0),
    ambient_level = 0.1,
    fog_color = vmath.vector3(0, 0, 0.1),
    duration = 10
  }, {
    sunlight_direction = vmath.vector3(-70, 90, 0),
    sunlight_color = vmath.vector3(1, 1, 1),
    sunlight_brightness = 1,
    ambient_color = vmath.vector3(1, 1, 1),
    ambient_level = 0.3,
    fog_color = vmath.vector3(0.53, 0.8, 0.92),
    duration = 15
  }, {
    sunlight_direction = vmath.vector3(0, 20, 0),
    sunlight_color = vmath.vector3(0.5, 0.2, 0),
    sunlight_brightness = 1,
    ambient_color = vmath.vector3(0.5, 0.2, 0),
    ambient_level = 0.1,
    fog_color = vmath.vector3(0.3, 0.2, 0),
    duration = 10
  }, {
    sunlight_direction = vmath.vector3(0, 20, 0),
    sunlight_color = vmath.vector3(0.318, 0.261, 0.413),
    sunlight_brightness = 0,
    ambient_color = vmath.vector3(0.318, 0.261, 0.413),
    ambient_level = 0.1,
    fog_color = vmath.vector3(0, 0, 0.1),
    duration = 5
  }
}

local function run_daycycle(self, index)
  local target = daycycle[index or 1]
  local duration = index and target.duration or 0
  local index = index or 1

  go.animate(urls.illumination_go, 'euler', go.PLAYBACK_ONCE_FORWARD, target.sunlight_direction, go.EASING_LINEAR, duration, 0, function()
    run_daycycle(self, index == #daycycle and 1 or (index + 1))
  end)

  go.cancel_animations(urls.illumination)

  go.animate(urls.illumination, 'sunlight_color', go.PLAYBACK_ONCE_FORWARD, target.sunlight_color, go.EASING_LINEAR, duration)
  go.animate(urls.illumination, 'sunlight_brightness', go.PLAYBACK_ONCE_FORWARD, target.sunlight_brightness, go.EASING_LINEAR, duration)
  go.animate(urls.illumination, 'ambient_color', go.PLAYBACK_ONCE_FORWARD, target.ambient_color, go.EASING_LINEAR, duration)
  go.animate(urls.illumination, 'ambient_level', go.PLAYBACK_ONCE_FORWARD, target.ambient_level, go.EASING_LINEAR, duration)
  go.animate(urls.illumination, 'fog_color', go.PLAYBACK_ONCE_FORWARD, target.fog_color, go.EASING_LINEAR, duration)
end

--
-- Lifecycle

function init(self)
  urls = {
    illumination_go = msg.url('illumination'),
    illumination = msg.url('illumination#illumination'),
    firefly = msg.url('firefly'),
    firefly_light = msg.url('firefly#light'),
    fireplace = msg.url('fireplace#light'),
    spot_red = msg.url('light_red'),
    spot_green = msg.url('light_green')
  }

  run_daycycle(self)

  go.animate(urls.spot_red, 'euler.y', go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_LINEAR, 10, 0)
  go.animate(urls.spot_red, 'euler.z', go.PLAYBACK_LOOP_PINGPONG, -50, go.EASING_INOUTQUAD, 5, 0)
  go.animate(urls.spot_green, 'euler.y', go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_LINEAR, 12, 0)
  go.animate(urls.spot_green, 'euler.z', go.PLAYBACK_LOOP_PINGPONG, -50, go.EASING_INOUTQUAD, 5, 0)
  go.animate(urls.fireplace, 'brightness', go.PLAYBACK_LOOP_PINGPONG, 0.8, go.EASING_INOUTQUAD, 1, 0)
  go.animate(urls.firefly, 'position', go.PLAYBACK_LOOP_PINGPONG, vmath.vector3(-6, 1, -4), go.EASING_INOUTQUAD, 25, 0)

  illumination.set_debug(true)
end